
const fs = require('fs');
const TelegramApi = require("node-telegram-bot-api")
process.env.NTBA_FIX_350 = true;

// —Ç–æ–∫–µ–Ω —Ç–µ—Å—Ç –±–æ—Ç–∞
// const token = JSON.parse(fs.readFileSync("../keys.json", { encoding: 'utf8' }))['tgBotTEST']


const token = JSON.parse(fs.readFileSync("../keys.json", { encoding: 'utf8' }))['tgBotT']



const bot = new TelegramApi(token, { polling: true })


const {saveUser, setNameT, stressSave, getInfoUser} = require("./user");
const {getDay, beautifulDate} = require("./brains");
const {autoTNames, KEYBOARD_TodayTomorrow, fromAtoZ} = require("./key")





async function respondText(){
    await bot.on('message', msg => {
    
        let text = msg.text.toLowerCase().replace(/ +/g, ' ').trim();
        let chat_id = msg.chat.id;
        let botText
        console.log(text)
        console.log(chat_id);
    
        try {
            if (text === "/start" || text === "/about") {
                saveUser(msg)

                botText = "‚ö°Ô∏è–≠—Ç–æ—Ç –±–æ—Ç –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –≤–∞–º –¥–æ—Å—Ç—É–ø –∫ –±—ã—Å—Ç—Ä–æ–º—É –ø–æ–ª—É—á–µ–Ω–∏—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é –¥–ª—è –≤–∞—Å. \n\nüß© –ß—Ç–æ–±—ã –∏–º–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ—Å—Ç–æ —É–∫–∞–∑–∞—Ç—å —Å–≤–æ—ë –§–ò–û –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–æ–º–∞–Ω–¥—ã /setname \nüåÖ –ü–æ—Å–ª–µ —á–µ–≥–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ / —Å–µ–≥–æ–¥–Ω—è \n\nüîÑ –ß—Ç–æ–±—ã –∏–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Å–≤–æ—ë–º –§–ò–û –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç—É –∂–µ –∫–æ–º–∞–Ω–¥—É /setname \n\nüóì –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∑–∞ –Ω–µ–¥–µ–ª—é –≤–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –Ω—É–∂–Ω–æ–π –Ω–µ–¥–µ–ª–∏, –≤–º–µ—Å—Ç–µ —Å –∫–æ–º–∞–Ω–¥–æ–π /getweek \n–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: /getweek 23.09.2024\n\nüéØ–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –¥–µ–Ω—å, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /getday\n–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: /getday 04.04.2024"
                
                return bot.sendMessage(chat_id, botText);
            }

            if (text === "/setname") {
                saveUser(msg)
    
                bot.sendMessage(chat_id, "–ü–µ—Ä–≤–∞—è –±—É–∫–≤–∞ —Ñ–∞–º–∏–ª–∏–∏...", fromAtoZ);
            }

            if (text === "—Å–µ–≥–æ–¥–Ω—è" || text === "–∑–∞–≤—Ç—Ä–∞"){
                stressSave(chat_id)
                console.log(getInfoUser(chat_id, 'nameT'));
                
                bot.sendMessage(chat_id, getDay(chat_id, text), { parse_mode: 'HTML' }, KEYBOARD_TodayTomorrow)
            }

            if (text.split(' ')[0] === "/getday"){
                stressSave(chat_id)
                bot.sendMessage(chat_id, getDay(chat_id, text.split(' ')[1]), { parse_mode: 'HTML' }, KEYBOARD_TodayTomorrow)
            }
            
            if (text.split(' ')[0] === "/getweek") {

                stressSave(chat_id)

                let td = text.split(' ')[1].split('.')

                let date = new Date(Number(td[2]), Number(td[1])-1, Number(td[0]))

                let weekdays = ['–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–í—Ç–æ—Ä–Ω–∏–∫', '–°—Ä–µ–¥–∞', '–ß–µ—Ç–≤–µ—Ä–≥', '–ü—è—Ç–Ω–∏—Ü–∞', '–°—É–±–±–æ—Ç–∞']
                for (let el in weekdays){
                    setTimeout(function() {
                        try {
                            bot.sendMessage(chat_id, `${beautifulDate(String(date.getDate()))+'.'+beautifulDate(String(date.getMonth()+1))+'.'+date.getFullYear()} ${weekdays[el]}:\n\n` + getDay(chat_id, `${date.getDate()+'.'+(date.getMonth()+1)+'.'+date.getFullYear()}`), { parse_mode: 'HTML' }, KEYBOARD_TodayTomorrow);
                        } catch (error) {
                            console.log(error);
                        }
                        date.setDate(date.getDate() + 1)
                    }, 1000 * el);
                    
                }

    
            }
            
            
        } catch (error) {
            console.log(error);
        }
    
    })
}

async function respondButton(){
    await bot.on('callback_query', msg => {
        let dataBtn = msg.data;
        let chat_id = msg.message.chat.id;

        try {
            if (dataBtn.split(', ')[0] === '3849'){
                setNameT(chat_id, dataBtn.split(', ')[1])
          
                bot.sendMessage(chat_id, "–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã", KEYBOARD_TodayTomorrow);
            }
    
    
            if (msg.data.split(', ')[0] === '111000') {
                bot.sendMessage(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—ë –§–ò–û", autoTNames('10'));
            }
        
            if (msg.data.split(', ')[0] === '000111') {
                bot.sendMessage(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—ë –§–ò–û", autoTNames('01'));
            }
    
            if (msg.data.split(', ')[0] === '4523') {
                console.log(msg.data.split(', ')[1])
                setNameT(chat_id, msg.data.split(', ')[1])
                return bot.sendMessage(chat_id, "–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã", KEYBOARD_TodayTomorrow);
            }
            
        } catch (error) {
            console.log(error);
            
        }
        
    })
}


respondText()
respondButton()